version: '3.8'

services:
  web:
    build:
      context: .
      args:
        ENVIRONMENT: dev  # Remplace par 'prod' selon ton besoin
    environment:
      - REDIS_URL=redis://redis:6379/0
      - DJANGO_SETTINGS_MODULE=medicalchain.settings.dev  # Assure-toi que ça correspond à ENVIRONMENT
      - DEBUG=1
      - DJANGO_ENV=dev
    volumes:
      - static_volume:/app/staticfiles
      - ./db.sqlite3:/app/db.sqlite3
      - ./media:/app/media
    expose:
      - "8000"
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8000/health/ || exit 1"]
      interval: 30s
      timeout: 120s
      retries: 5
      start_period: 150s
    networks:
      - backend
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - static_volume:/usr/share/nginx/html/static
      - ./media:/usr/share/nginx/html/media
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    healthcheck:
      test: ["CMD-SHELL", "wget -q --tries=1 --spider http://localhost/nginx_health/ || exit 0"]
      interval: 30s
      timeout: 30s
      retries: 5
      start_period: 180s
    depends_on:
      web:
        condition: service_healthy
    networks:
      - backend
    restart: unless-stopped

  redis:
    image: redis:7.2-alpine
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - backend
    restart: unless-stopped

volumes:
  redis_data:
  static_volume:

networks:
  backend:
    driver: bridge
